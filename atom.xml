<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://shijiaxin.github.io/atom.xml" rel="self"/>
  <link href="http://shijiaxin.github.io/"/>
  <updated>2014-04-14T22:37:12+08:00</updated>
  <id>http://shijiaxin.github.io/</id>
  <author>
    <name><![CDATA[shijiaxin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Linux下使用hugepage]]></title>
    <link href="http://shijiaxin.github.io/blog/2014/03/25/helloworld/"/>
    <updated>2014-03-25T18:15:37+08:00</updated>
    <id>http://shijiaxin.github.io/blog/2014/03/25/helloworld</id>
    <content type="html"><![CDATA[<p>如果应用程序使用的内存比较大的时候，就可以考虑使用大内存。好处有可以减少tlb的miss，还有缺页中断次数会大幅减少。</p>

<p>2.6.32以后的内核支持使用MAP_HUGETLB方式来使用内存,
首先使用如下命令分配和查看大内存页:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sjx$ sysctl vm.nr_hugepages=192
</span><span class='line'>sjx$ cat /proc/meminfo | grep Huge
</span><span class='line'>
</span><span class='line'>AnonHugePages:         0 kB
</span><span class='line'>HugePages_Total:     192
</span><span class='line'>HugePages_Free:      192
</span><span class='line'>HugePages_Rsvd:        0
</span><span class='line'>HugePages_Surp:        0
</span><span class='line'>Hugepagesize:       2048 kB</span></code></pre></td></tr></table></div></figure>


<p>接着写一段C++代码验证一下是否可以正确使用mmap来分配大内存页，以及是否有效果。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cp">#include&lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include&lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include&lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include&lt;sys/mman.h&gt;</span>
</span><span class='line'><span class="cp">#include&lt;sys/time.h&gt;</span>
</span><span class='line'><span class="k">class</span> <span class="nc">timer</span><span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>  <span class="k">struct</span>  <span class="n">timeval</span> <span class="n">t</span><span class="p">;</span>
</span><span class='line'>  <span class="n">timer</span><span class="p">(){</span>
</span><span class='line'>    <span class="n">gettimeofday</span><span class="p">(</span><span class="o">&amp;</span><span class="n">t</span><span class="p">,</span><span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="kt">int</span> <span class="n">get_time_diff</span><span class="p">(</span><span class="n">timer</span><span class="o">&amp;</span> <span class="n">t1</span><span class="p">,</span> <span class="n">timer</span><span class="o">&amp;</span> <span class="n">t2</span><span class="p">){</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">(</span><span class="mi">1000000</span> <span class="o">*</span> <span class="p">(</span><span class="n">t2</span><span class="p">.</span><span class="n">t</span><span class="p">.</span><span class="n">tv_sec</span><span class="o">-</span><span class="n">t1</span><span class="p">.</span><span class="n">t</span><span class="p">.</span><span class="n">tv_sec</span><span class="p">)</span><span class="o">+</span> <span class="n">t2</span><span class="p">.</span><span class="n">t</span><span class="p">.</span><span class="n">tv_usec</span><span class="o">-</span><span class="n">t1</span><span class="p">.</span><span class="n">t</span><span class="p">.</span><span class="n">tv_usec</span><span class="p">)</span><span class="o">/</span><span class="mi">1000</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">m</span><span class="p">;</span>
</span><span class='line'>  <span class="n">size_t</span> <span class="n">s</span> <span class="o">=</span> <span class="p">(</span><span class="mi">800</span> <span class="o">*</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="p">);</span>
</span><span class='line'>  <span class="n">m</span> <span class="o">=</span><span class="p">(</span><span class="kt">char</span><span class="o">*</span> <span class="p">)</span> <span class="n">mmap</span><span class="p">(</span><span class="nb">NULL</span><span class="p">,</span> <span class="n">s</span><span class="p">,</span> <span class="n">PROT_READ</span> <span class="o">|</span> <span class="n">PROT_WRITE</span><span class="p">,</span>
</span><span class='line'>        <span class="n">MAP_PRIVATE</span> <span class="cm">/*MAP_SHARED*/</span> <span class="o">|</span> <span class="n">MAP_ANONYMOUS</span> <span class="o">|</span> <span class="n">MAP_HUGETLB</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">m</span> <span class="o">==</span> <span class="n">MAP_FAILED</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">perror</span><span class="p">(</span><span class="s">&quot;map mem&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">m</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">timer</span> <span class="n">t1</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">s</span><span class="p">;</span><span class="n">i</span><span class="o">+=</span><span class="mi">4096</span><span class="p">){</span>
</span><span class='line'>    <span class="n">m</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">timer</span> <span class="n">t2</span><span class="p">;</span>
</span><span class='line'>  <span class="n">munmap</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="n">s</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">m</span> <span class="o">=</span><span class="p">(</span><span class="kt">char</span><span class="o">*</span> <span class="p">)</span><span class="n">malloc</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
</span><span class='line'>  <span class="n">timer</span> <span class="n">t3</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">s</span><span class="p">;</span><span class="n">i</span><span class="o">+=</span><span class="mi">4096</span><span class="p">){</span>
</span><span class='line'>    <span class="n">m</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">timer</span> <span class="n">t4</span><span class="p">;</span>
</span><span class='line'>  <span class="n">free</span><span class="p">(</span><span class="n">m</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;mmap:%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">get_time_diff</span><span class="p">(</span><span class="n">t1</span><span class="p">,</span><span class="n">t2</span><span class="p">));</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;malloc:%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">get_time_diff</span><span class="p">(</span><span class="n">t3</span><span class="p">,</span><span class="n">t4</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>需要注意的是s最好是页面大小的整数倍，有的系统下如果非整数倍会报错。</p>

<p>最后在我的台式机上输出结果如下：主要原因应该是mmap的pagefault次数比较少。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="nl">mmap:</span><span class="mi">47</span>
</span><span class='line'><span class="nl">malloc:</span><span class="mi">164</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
